convert.py, tokens.py
Wandelt eine ColorForth-artige Sprache in eine binäre Repräsentation um.
Diese Repräsentation besteht aus einem 4-bit Tag gefolgt von Daten. Dies nenne ich "Token".
Die ColorForth-artige Sprache benutzt Präfixe, um den Token-Typ zu bestimmen.

- Alu-Mnemonics
ALUOP>DST:DOP:ROP:RET

- Dictionary-Eintrag
:WORD

- Push word address immediately
#'WORD

- execute word immediately
#WORD

- Push number immediately
#1234
#$1234

- Stringliteral
"String"
Was soll passieren? Compile to dict?

- Kommentare
\ Kommentar
( Kommentar )

- Compile Word address
'WORD

was ist mit #'WORD ?


- Compile call to word
WORD

- Compile number literal
1234
$1234



# dcpu.py
Simulation der DCPU, führt Binärcode aus.

# simpledasm.py
Zeilenbasierter Assembler.

# TODO

- Skript, das binäre Repräsentation als farbigen Code darstellt.
- Skript, das binäre Repräsentation ausführt
